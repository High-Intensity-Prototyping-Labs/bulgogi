setup.py:
        - Checks for dependencies.
        - Validates rules.yaml and project.yaml (no FS check).
        - Generates the build files.

build.py:
        - Detects any changes (see if need to re-run generate).
        - Builds.

bulgogi:
        - rules.yaml:
                - Defines the recognized patterns by the builder for the project.
                - Can be re-used between projects etc.
        - project.yaml:
                - Defines the project's targets.
                - Must be valid according to the patterns set forth in rules.yaml.
                - Depending on the builder, may not need to define every file.
        - builder:
                - Generates build files according to the project.yaml.
                - Can be written as a C extension to the engine or in Python (Jinja).
                - Usually thought of as the one crawling the FS (but not always required).

**Part of the advantage of hand-writing setup.py and build.py is allowing the dev to choose whether to use the engine or a custom script to set things up.
**It can even include copy/pasting previous build setups, cloning an open-source repository or a set of custom patch scripts for a messy project.
**At the end of the day, bulgogi is a way of thinking about build systems and not a single tool with a strict way of being used.
